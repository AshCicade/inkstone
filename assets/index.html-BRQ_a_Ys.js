import{_ as s,c as e,b as r,o as t}from"./app-C1LhZYOd.js";const n="/inkstone/assets/SPI%E6%9C%BA%E5%88%B6-Dce4gVDI.jpg",i="/inkstone/assets/mysql-spi-3ISFBWHL.png",o={};function l(c,a){return t(),e("div",null,a[0]||(a[0]=[r('<h2 id="什么是spi机制" tabindex="-1"><a class="header-anchor" href="#什么是spi机制"><span>什么是SPI机制</span></a></h2><p><strong>SPI</strong>（Service Provider Interface），是JDK内置的一种 <strong>服务提供发现机制</strong>，可以用来启用框架扩展和替换组件，主要是被框架的开发人员使用。Java中SPI机制主要思想是将装配的控制权移到程序之外，在模块化设计中这个机制尤其重要，其核心思想就是 <strong>解耦</strong>。</p><p>SPI整体机制图如下： <img src="'+n+'" alt="alt text"></p><p>在这里我们需要明确几个角色及各自的工作：</p><ul><li><strong>调用方</strong>：使用标准服务功能的一方。</li><li><strong>标准服务接口</strong>：定义标准服务接口的一方。</li><li><strong>服务提供方</strong>：实现标准服务接口的一方。 <ol><li>提供实现标准服务接口的实现类</li><li>在classpath下的 <strong>META-INF/services/</strong> 目录里创建一个配置文件，文件名就是标准服务接口的全限定性类名</li><li>配置文件内容是需要加载的实现类的全限定性类名</li><li>接口实现按行配置，可以是多个。</li></ol></li></ul><p>当调用方调用标准服务接口的时候，JDK就可以通过接口的全限定性类名查找 <strong>META-INF/services/</strong> 中的配置文件，根据配置文件中的具体实现类名进行加载实例化，就可以使用服务提供方的具体服务实现了。JDK中查找服务的实现的工具类是：<code>java.util.ServiceLoader</code>。</p><h2 id="spi的应用" tabindex="-1"><a class="header-anchor" href="#spi的应用"><span>SPI的应用</span></a></h2><h3 id="jdbc-drivermanager" tabindex="-1"><a class="header-anchor" href="#jdbc-drivermanager"><span>JDBC DriverManager</span></a></h3><h4 id="标准服务接口-jdbc接口的定义" tabindex="-1"><a class="header-anchor" href="#标准服务接口-jdbc接口的定义"><span><strong>标准服务接口</strong>：JDBC接口的定义</span></a></h4><p>JDK定义了标准服务接口<code>java.sql.Driver</code>，具体的实现由不同厂商来提供的。</p><h4 id="服务提供方-在mysql中的实现" tabindex="-1"><a class="header-anchor" href="#服务提供方-在mysql中的实现"><span><strong>服务提供方</strong>：在mysql中的实现</span></a></h4><p>在mysql的jar包中，找到 <strong>META-INF/services</strong> 目录，该目录下有一个名字为 <strong>java.sql.Driver</strong> 的文件，文件内容是<code>com.mysql.cj.jdbc.Driver</code>，这里面的内容就是针对JDK中定义的接口的实现。 <img src="'+i+'" alt="alt text"></p>',12)]))}const p=s(o,[["render",l],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/article/vi3mml8k/","title":"Java常用机制-SPI机制","lang":"zh-CN","frontmatter":{"title":"Java常用机制-SPI机制","tags":["JDK","SPI"],"createTime":"2025/02/18 15:14:03","permalink":"/article/vi3mml8k/"},"headers":[],"readingTime":{"minutes":1.64,"words":491},"git":{"updatedTime":1739925604000,"contributors":[{"name":"lyzhu","username":"lyzhu","email":"lyzhu@epoint.com.cn","commits":1,"avatar":"https://avatars.githubusercontent.com/lyzhu?v=4","url":"https://github.com/lyzhu"}]},"filePathRelative":"java/Java常用机制-SPI机制.md","categoryList":[{"id":"93f725","sort":10003,"name":"java"}]}');export{p as comp,h as data};
